/*註解*/
// sass 變數
@import 'sass/var';
@import 'sass/mixins';

// @import 'node_modules/bootstrap-sass/assets/stylesheets/bootstrap';
/*bootstrap end*/
//layout
@import 'sass/header';
@import 'sass/main/desktop';
@import 'sass/main/medium';
@import 'sass/main/small';



body {
    font-family: $font_family;
    margin: $margin;
    padding: $a * 1;
    background-color: $red;
    font-size: $null;
    color: map-get($bg-color, 'blues');

    @if $aa==true {
        border-radius: 10px;
    }
}


//  function name(){

//  }  





// nesting 巢狀寫法
.wrapper {
    width: 1200px;
    //呼叫
    @include marginAuto(#f0ed53);

    h1 {
        @include marginAuto(#333, #07ffac);
        font-size: 30px;
        color: map-get($bg-color, 'red');

        .title {
            font-size: 20px;
        }
    }

    span {
        font-size: 10px;
        color: #999;
    }

    .btn {
        width: 100px;
        height: 20px;
        padding: 10px;
        text-align: center;
        transition: .2s all ease-in-out;
        background-color: rgb(217, 255, 4);
        cursor: pointer;

        &:hover {
            background-color: rgb(143, 196, 0); // 偽元素   
        }

        &::before {
            content: ''; // 偽元素
        }
    }
}


//呼叫

.btn-wide {
    width: 120px;
    @include btns(60px, rgb(12, 114, 247), #00e4a0, 10px)
}

.btn-aa {
    @include btns(30px, rgb(0, 71, 0), rgb(224, 0, 0));
}


// 數值轉字串 #{}

@include push_left('.push', 200, aa) {
    border: 1px solid #00e4a0;
    padding-left: 10px;
    @include box-sizing();
}


@include push_left('.pull', 100, bb) {
    margin-top: 100px;
    @include box-sizing();
}


@include btnAll('.btn-wide', 250px, 10px, rgb(157, 255, 0));
@include btnAll('.btn-small', 150px, 8px, rgb(21, 255, 0));
@include btnAll('.btn-medium', 200px, 9px, rgb(0, 238, 255));


$a : 100;
$b : 20;

.box {
    width: 10 + 10px;
    height: 10px - 11;
    padding: 10 * 10 + px;
    font: ($a / $b) + px;
    margin: floor(100 / 3) + px; //無條件捨去
    font-size: ceil(100 / 3) + px; //無條件進位
    max-width: round(100 / 6) + px; //四捨五入
}


// $fontSize-basic : 12px;

@mixin fontSize($fontSize-basic) {
    h1 {
        font-size: ceil($fontSize-basic * 5);
    }

    h2 {
        font-size: ceil($fontSize-basic * 4.5);
    }

    h3 {
        font-size: ceil($fontSize-basic * 4);
    }

    h4 {
        font-size: ceil($fontSize-basic * 3.8);
    }

    h5 {
        font-size: ceil($fontSize-basic * 2);
    }
}

@include fontSize(20px);



$width : 30;


.box2 {
    @if ($width < 100) {
        width: $width + px;
    }

    @else if ($width==110) {
        width: $width * 2 + px;
    }

    @else {
        width: ($width / 2) + px;
    }
}

// layout
@mixin layout($width) {
    @if $width==100 {
        .container-full {
            width: 100%;
            display: block;
            @content;
        }
    }

    @else {
        .container {
            width: $width + px;
            margin: 0 auto;
            @content;
        }
    }
}

@include layout(1366) {
    h1 {
        font-size: 20px;
    }
}






@include rwd(medium) {
    .box {
        width: 300px;
    }
}


@include rwd(small) {
    .box {
        width: 100px;

    }
}



// @for $i from 1 through 100 {
//     .push-#{$i} {
//         position: relative;
//         left: $i * 1px
//     }
// }

@mixin push($dir, $num) {
    @for $i from 1 through $num {
        .push-#{$dir}_#{$i} {
            position: relative;
            #{$dir}: $i * 1px;
            @content;
        }
    }
}




@include push(top , 100);
@include push(left , 100){
   font-size: 100px !important;
   color: #f20 !important ; 
};